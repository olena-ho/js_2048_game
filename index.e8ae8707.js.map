{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\n\"use strict\";\n/**\n * This class represents the game.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Array.from({\n            length: 4\n        }, function() {\n            return Array(4).fill(0);\n        });\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.status = Game.GAME_STATUS.IDLE;\n        this.score = 0;\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.state = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = Game.GAME_STATUS.PLAYING;\n                this.addNewCell();\n                this.addNewCell();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.status = Game.GAME_STATUS.IDLE;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(rowIndex) {\n                    var row = _this.state[rowIndex].filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    if (row.length === 0) return \"continue\";\n                    for(var colIndex = 0; colIndex < row.length - 1; colIndex++){\n                        if (row[colIndex] === 0) continue;\n                        if (row[colIndex] === row[colIndex + 1]) {\n                            row[colIndex] *= 2;\n                            row[colIndex + 1] = 0;\n                            _this.score += row[colIndex];\n                        }\n                    }\n                    row = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(row.length < Game.COL_LENGTH)row.push(0);\n                    _this.state[rowIndex] = row;\n                };\n                if (this.status !== Game.GAME_STATUS.PLAYING) return;\n                var previousState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++)_loop(rowIndex);\n                if (!this.statesAreEqual(previousState, this.state)) this.addNewCell();\n                this.checkWinLose();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(rowIndex) {\n                    var row = _this.state[rowIndex].filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    if (row.length === 0) return \"continue\";\n                    for(var colIndex = row.length - 1; colIndex > 0; colIndex--){\n                        if (row[colIndex] === 0) continue;\n                        if (row[colIndex] === row[colIndex - 1]) {\n                            row[colIndex] *= 2;\n                            row[colIndex - 1] = 0;\n                            _this.score += row[colIndex];\n                        }\n                    }\n                    row = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(row.length < Game.COL_LENGTH)row.unshift(0);\n                    _this.state[rowIndex] = row;\n                };\n                if (this.status !== Game.GAME_STATUS.PLAYING) return;\n                var previousState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++)_loop(rowIndex);\n                if (!this.statesAreEqual(previousState, this.state)) this.addNewCell();\n                this.checkWinLose();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(colIndex) {\n                    var column = [];\n                    for(var rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++)if (_this.state[rowIndex][colIndex] !== 0) column.push(_this.state[rowIndex][colIndex]);\n                    for(var i = 0; i < column.length - 1; i++){\n                        if (column[i] === 0) continue;\n                        if (column[i] === column[i + 1]) {\n                            column[i] *= 2;\n                            column[i + 1] = 0;\n                            _this.score += column[i];\n                        }\n                    }\n                    column = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(column.length < Game.ROW_LENGTH)column.push(0);\n                    for(var rowIndex1 = 0; rowIndex1 < Game.ROW_LENGTH; rowIndex1++)_this.state[rowIndex1][colIndex] = column[rowIndex1];\n                };\n                if (this.status !== Game.GAME_STATUS.PLAYING) return;\n                var previousState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++)_loop(colIndex);\n                if (!this.statesAreEqual(previousState, this.state)) this.addNewCell();\n                this.checkWinLose();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(colIndex) {\n                    var column = [];\n                    for(var rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++)if (_this.state[rowIndex][colIndex] !== 0) column.push(_this.state[rowIndex][colIndex]);\n                    for(var i = column.length - 1; i > 0; i--){\n                        if (column[i] === 0) continue;\n                        if (column[i] === column[i - 1]) {\n                            column[i] *= 2;\n                            column[i - 1] = 0;\n                            _this.score += column[i];\n                        }\n                    }\n                    column = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(column.length < Game.ROW_LENGTH)column.unshift(0);\n                    for(var rowIndex1 = 0; rowIndex1 < Game.ROW_LENGTH; rowIndex1++)_this.state[rowIndex1][colIndex] = column[rowIndex1];\n                };\n                if (this.status !== Game.GAME_STATUS.PLAYING) return;\n                var previousState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++)_loop(colIndex);\n                if (!this.statesAreEqual(previousState, this.state)) this.addNewCell();\n                this.checkWinLose();\n            }\n        },\n        {\n            key: \"statesAreEqual\",\n            value: function statesAreEqual(state1, state2) {\n                return state1.flat().join() === state2.flat().join();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"addNewCell\",\n            value: function addNewCell() {\n                var emptyCells = [];\n                this.state.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, cellIndex) {\n                        if (cell === 0) emptyCells.push([\n                            rowIndex,\n                            cellIndex\n                        ]);\n                    });\n                });\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), r = _emptyCells_Math_floor[0], c = _emptyCells_Math_floor[1];\n                this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"checkWinLose\",\n            value: function checkWinLose() {\n                if (this.state.flat().includes(2048)) this.status = Game.GAME_STATUS.WIN;\n                else if (!this.state.flat().includes(0) && !this.checkMergePossible()) this.status = Game.GAME_STATUS.LOSE;\n            }\n        },\n        {\n            key: \"checkMergePossible\",\n            value: function checkMergePossible() {\n                for(var rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++)for(var colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++){\n                    if (colIndex < Game.COL_LENGTH - 1 && this.state[rowIndex][colIndex] === this.state[rowIndex][colIndex + 1]) return true;\n                    if (rowIndex < Game.ROW_LENGTH - 1 && this.state[rowIndex][colIndex] === this.state[rowIndex + 1][colIndex]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"GAME_STATUS\", {\n    IDLE: \"idle\",\n    PLAYING: \"playing\",\n    WIN: \"win\",\n    LOSE: \"lose\"\n});\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"ROW_LENGTH\", 4);\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"COL_LENGTH\", 4);\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$startMsg = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$scoreEl = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$winMsg = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMsg = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$cellNodes = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$cells = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)($197cd56b15c33885$var$cellNodes);\nvar $197cd56b15c33885$var$updateCells = function() {\n    $197cd56b15c33885$var$cells.forEach(function(cell, index) {\n        var rowIndex = Math.floor(index / $3d28d7f1aac198f5$exports.COL_LENGTH);\n        var colIndex = index % $3d28d7f1aac198f5$exports.COL_LENGTH;\n        var cellValue = $197cd56b15c33885$var$game.state[rowIndex][colIndex];\n        cell.textContent = cellValue || \"\";\n        cell.className = \"field-cell\";\n        if (cellValue) cell.classList.add(\"field-cell--\".concat(cellValue));\n    });\n    $197cd56b15c33885$var$scoreEl.textContent = $197cd56b15c33885$var$game.getScore();\n};\nvar $197cd56b15c33885$var$handleArrowPress = function(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$updateCells();\n    if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.GAME_STATUS.WIN) $197cd56b15c33885$var$winMsg.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.GAME_STATUS.LOSE) $197cd56b15c33885$var$loseMsg.classList.remove(\"hidden\");\n};\nvar $197cd56b15c33885$var$handleStart = function() {\n    if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.GAME_STATUS.IDLE) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n        $197cd56b15c33885$var$startBtn.classList.add(\"restart\");\n        $197cd56b15c33885$var$startBtn.classList.remove(\"start\");\n        $197cd56b15c33885$var$startMsg.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startBtn.textContent = \"Start\";\n        $197cd56b15c33885$var$loseMsg.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMsg.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startBtn.classList.add(\"start\");\n        $197cd56b15c33885$var$startBtn.classList.remove(\"restart\");\n        $197cd56b15c33885$var$startMsg.classList.remove(\"hidden\");\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleArrowPress);\n    $197cd56b15c33885$var$updateCells();\n    if ($197cd56b15c33885$var$game.status !== $3d28d7f1aac198f5$exports.GAME_STATUS.PLAYING) document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleArrowPress);\n};\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", $197cd56b15c33885$var$handleStart);\n\n})();\n//# sourceMappingURL=index.e8ae8707.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startBtn = document.querySelector('.start');\nconst startMsg = document.querySelector('.message-start');\nconst scoreEl = document.querySelector('.game-score');\nconst winMsg = document.querySelector('.message-win');\nconst loseMsg = document.querySelector('.message-lose');\nconst cellNodes = document.querySelectorAll('.field-cell');\nconst cells = [...cellNodes];\n\nconst updateCells = () => {\n  cells.forEach((cell, index) => {\n    const rowIndex = Math.floor(index / Game.COL_LENGTH);\n    const colIndex = index % Game.COL_LENGTH;\n    const cellValue = game.state[rowIndex][colIndex];\n\n    cell.textContent = cellValue || '';\n    cell.className = 'field-cell';\n\n    if (cellValue) {\n      cell.classList.add(`field-cell--${cellValue}`);\n    }\n  });\n\n  scoreEl.textContent = game.getScore();\n};\n\nconst handleArrowPress = (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      break;\n  }\n\n  updateCells();\n\n  if (game.status === Game.GAME_STATUS.WIN) {\n    winMsg.classList.remove('hidden');\n  } else if (game.status === Game.GAME_STATUS.LOSE) {\n    loseMsg.classList.remove('hidden');\n  }\n};\n\nconst handleStart = () => {\n  if (game.status === Game.GAME_STATUS.IDLE) {\n    game.start();\n    startBtn.textContent = 'Restart';\n    startBtn.classList.add('restart');\n    startBtn.classList.remove('start');\n    startMsg.classList.add('hidden');\n  } else {\n    game.restart();\n    startBtn.textContent = 'Start';\n    loseMsg.classList.add('hidden');\n    winMsg.classList.add('hidden');\n    startBtn.classList.add('start');\n    startBtn.classList.remove('restart');\n    startMsg.classList.remove('hidden');\n  }\n\n  document.addEventListener('keydown', handleArrowPress);\n\n  updateCells();\n\n  if (game.status !== Game.GAME_STATUS.PLAYING) {\n    document.removeEventListener('keydown', handleArrowPress);\n  }\n};\n\nstartBtn.addEventListener('click', handleStart);\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n */\nclass Game {\n  static GAME_STATUS = {\n    IDLE: 'idle',\n    PLAYING: 'playing',\n    WIN: 'win',\n    LOSE: 'lose',\n  };\n\n  static ROW_LENGTH = 4;\n  static COL_LENGTH = 4;\n\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = Array.from({ length: 4 }, () => Array(4).fill(0)),\n  ) {\n    this.status = Game.GAME_STATUS.IDLE;\n    this.score = 0;\n    this.initialState = initialState.map((row) => [...row]);\n    this.state = this.initialState.map((row) => [...row]);\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = Game.GAME_STATUS.PLAYING;\n    this.addNewCell();\n    this.addNewCell();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n    this.status = Game.GAME_STATUS.IDLE;\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.status !== Game.GAME_STATUS.PLAYING) {\n      return;\n    }\n\n    const previousState = this.state.map((row) => [...row]);\n\n    for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n      let row = this.state[rowIndex].filter((cell) => cell !== 0);\n\n      if (row.length === 0) {\n        continue;\n      }\n\n      for (let colIndex = 0; colIndex < row.length - 1; colIndex++) {\n        if (row[colIndex] === 0) {\n          continue;\n        }\n\n        if (row[colIndex] === row[colIndex + 1]) {\n          row[colIndex] *= 2;\n          row[colIndex + 1] = 0;\n          this.score += row[colIndex];\n        }\n      }\n\n      row = row.filter((cell) => cell !== 0);\n\n      while (row.length < Game.COL_LENGTH) {\n        row.push(0);\n      }\n\n      this.state[rowIndex] = row;\n    }\n\n    if (!this.statesAreEqual(previousState, this.state)) {\n      this.addNewCell();\n    }\n\n    this.checkWinLose();\n  }\n\n  moveRight() {\n    if (this.status !== Game.GAME_STATUS.PLAYING) {\n      return;\n    }\n\n    const previousState = this.state.map((row) => [...row]);\n\n    for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n      let row = this.state[rowIndex].filter((cell) => cell !== 0);\n\n      if (row.length === 0) {\n        continue;\n      }\n\n      for (let colIndex = row.length - 1; colIndex > 0; colIndex--) {\n        if (row[colIndex] === 0) {\n          continue;\n        }\n\n        if (row[colIndex] === row[colIndex - 1]) {\n          row[colIndex] *= 2;\n          row[colIndex - 1] = 0;\n          this.score += row[colIndex];\n        }\n      }\n\n      row = row.filter((cell) => cell !== 0);\n\n      while (row.length < Game.COL_LENGTH) {\n        row.unshift(0);\n      }\n\n      this.state[rowIndex] = row;\n    }\n\n    if (!this.statesAreEqual(previousState, this.state)) {\n      this.addNewCell();\n    }\n\n    this.checkWinLose();\n  }\n\n  moveUp() {\n    if (this.status !== Game.GAME_STATUS.PLAYING) {\n      return;\n    }\n\n    const previousState = this.state.map((row) => [...row]);\n\n    for (let colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++) {\n      let column = [];\n\n      for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n        if (this.state[rowIndex][colIndex] !== 0) {\n          column.push(this.state[rowIndex][colIndex]);\n        }\n      }\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === 0) {\n          continue;\n        }\n\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          column[i + 1] = 0;\n          this.score += column[i];\n        }\n      }\n\n      column = column.filter((cell) => cell !== 0);\n\n      while (column.length < Game.ROW_LENGTH) {\n        column.push(0);\n      }\n\n      for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n        this.state[rowIndex][colIndex] = column[rowIndex];\n      }\n    }\n\n    if (!this.statesAreEqual(previousState, this.state)) {\n      this.addNewCell();\n    }\n\n    this.checkWinLose();\n  }\n\n  moveDown() {\n    if (this.status !== Game.GAME_STATUS.PLAYING) {\n      return;\n    }\n\n    const previousState = this.state.map((row) => [...row]);\n\n    for (let colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++) {\n      let column = [];\n\n      for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n        if (this.state[rowIndex][colIndex] !== 0) {\n          column.push(this.state[rowIndex][colIndex]);\n        }\n      }\n\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === 0) {\n          continue;\n        }\n\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          column[i - 1] = 0;\n          this.score += column[i];\n        }\n      }\n\n      column = column.filter((cell) => cell !== 0);\n\n      while (column.length < Game.ROW_LENGTH) {\n        column.unshift(0);\n      }\n\n      for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n        this.state[rowIndex][colIndex] = column[rowIndex];\n      }\n    }\n\n    if (!this.statesAreEqual(previousState, this.state)) {\n      this.addNewCell();\n    }\n\n    this.checkWinLose();\n  }\n\n  statesAreEqual(state1, state2) {\n    return state1.flat().join() === state2.flat().join();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  addNewCell() {\n    const emptyCells = [];\n\n    this.state.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        if (cell === 0) {\n          emptyCells.push([rowIndex, cellIndex]);\n        }\n      });\n    });\n\n    const [r, c] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  checkWinLose() {\n    if (this.state.flat().includes(2048)) {\n      this.status = Game.GAME_STATUS.WIN;\n    } else if (!this.state.flat().includes(0) && !this.checkMergePossible()) {\n      this.status = Game.GAME_STATUS.LOSE;\n    }\n  }\n\n  checkMergePossible() {\n    for (let rowIndex = 0; rowIndex < Game.ROW_LENGTH; rowIndex++) {\n      for (let colIndex = 0; colIndex < Game.COL_LENGTH; colIndex++) {\n        if (\n          colIndex < Game.COL_LENGTH - 1 &&\n          this.state[rowIndex][colIndex] === this.state[rowIndex][colIndex + 1]\n        ) {\n          return true;\n        }\n\n        if (\n          rowIndex < Game.ROW_LENGTH - 1 &&\n          this.state[rowIndex][colIndex] === this.state[rowIndex + 1][colIndex]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","obj","key","value","defineProperty","enumerable","configurable","writable","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","fill","instance","Constructor","status","GAME_STATUS","IDLE","score","map","row","state","PLAYING","addNewCell","_this","previousState","rowIndex","ROW_LENGTH","_loop","filter","cell","colIndex","COL_LENGTH","push","statesAreEqual","checkWinLose","unshift","column","rowIndex1","state1","state2","flat","join","emptyCells","forEach","cellIndex","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","r","c","includes","WIN","checkMergePossible","LOSE","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startBtn","document","querySelector","$197cd56b15c33885$var$startMsg","$197cd56b15c33885$var$scoreEl","$197cd56b15c33885$var$winMsg","$197cd56b15c33885$var$loseMsg","$197cd56b15c33885$var$cells","querySelectorAll","$197cd56b15c33885$var$updateCells","index","cellValue","textContent","className","classList","add","concat","getScore","$197cd56b15c33885$var$handleArrowPress","e","moveUp","moveDown","moveLeft","moveRight","remove","addEventListener","start","restart","removeEventListener"],"version":3,"file":"index.e8ae8707.js.map"}